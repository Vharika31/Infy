Brute force 

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        int n = nums.size();
        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                if (nums[i] + nums[j] == target) {
                    return {i, j};
                }
            }
        }
        return {}; 
    }
};

Optimal solution

#include<bits/stdc++.h>
using namespace std;
int main(){
    int n;
    cin>>n;
    vector<pair<int, int>> arr(n); 
    for (int i = 0; i < n; i++) {
        int val;
        cin >> val;
        arr[i] = {val, i};
    }
    int target;
    cin>>target;
    sort(arr.begin(),arr.end());
    int left = 0;
    int right = arr.size()-1;
    int sum;
    while(left<=right){
        sum = arr[left].first+arr[right].first;
        if(sum == target){
           cout<<arr[left].second<<arr[right].second;
           return 0;
        }
        else if(sum<target){
            left++;
        }
        else
        right--;
    }
    return {};
}
